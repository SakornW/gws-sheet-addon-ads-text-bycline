services:
  app:
    build: .
    ports:
      - "8000:8000"
    env_file:
      - .env
    develop:
      # Create a `watch` configuration to update the app
      # https://docs.docker.com/compose/file-watch/#compose-watch-versus-bind-mounts
      watch:
        # Sync the working directory with the `/app` directory in the container
        - action: sync
          path: .
          target: /app
          # Exclude the project virtual environment â€” it could be for a
          # different platform in the container
          ignore:
            - .venv/

        # Rebuild the image if dependencies change by checking uv.lock
        - action: rebuild
          path: ./uv.lock
    depends_on:
      - db
    restart: unless-stopped

  db:
    image: postgres:14
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=adstext
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Not working. Need to run separately as docker >> "docker run --net=host -it -e NGROK_AUTHTOKEN=2wr3bj7pjiv2Zp7TiqhDSwaqcV8_5CPCTrokxhePA5pNJZ6zQ ngrok/ngrok:latest http 8000"
  # ngrok:
  #   image: ngrok/ngrok:latest
  #   network_mode: host
  #   environment:
  #     - NGROK_AUTHTOKEN=2wr3bj7pjiv2Zp7TiqhDSwaqcV8_5CPCTrokxhePA5pNJZ6zQ
  #   command: http 8000
  #   stdin_open: true
  #   tty: true


volumes:
  postgres_data:
